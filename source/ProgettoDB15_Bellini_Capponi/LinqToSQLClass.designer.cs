#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.17929
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProgettoDB15_Bellini_Capponi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProgettoDB15")]
	public partial class LinqToSQLClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertCASAPRODUTTRICE(CASAPRODUTTRICE instance);
    partial void UpdateCASAPRODUTTRICE(CASAPRODUTTRICE instance);
    partial void DeleteCASAPRODUTTRICE(CASAPRODUTTRICE instance);
    partial void InsertTUBO(TUBO instance);
    partial void UpdateTUBO(TUBO instance);
    partial void DeleteTUBO(TUBO instance);
    partial void InsertCLIENTE(CLIENTE instance);
    partial void UpdateCLIENTE(CLIENTE instance);
    partial void DeleteCLIENTE(CLIENTE instance);
    partial void InsertDETTAGLIODORDINE(DETTAGLIODORDINE instance);
    partial void UpdateDETTAGLIODORDINE(DETTAGLIODORDINE instance);
    partial void DeleteDETTAGLIODORDINE(DETTAGLIODORDINE instance);
    partial void InsertDETTAGLIOGIACENZA(DETTAGLIOGIACENZA instance);
    partial void UpdateDETTAGLIOGIACENZA(DETTAGLIOGIACENZA instance);
    partial void DeleteDETTAGLIOGIACENZA(DETTAGLIOGIACENZA instance);
    partial void InsertDIPENDENTE(DIPENDENTE instance);
    partial void UpdateDIPENDENTE(DIPENDENTE instance);
    partial void DeleteDIPENDENTE(DIPENDENTE instance);
    partial void InsertFORNITORE(FORNITORE instance);
    partial void UpdateFORNITORE(FORNITORE instance);
    partial void DeleteFORNITORE(FORNITORE instance);
    partial void InsertINVENTARIO(INVENTARIO instance);
    partial void UpdateINVENTARIO(INVENTARIO instance);
    partial void DeleteINVENTARIO(INVENTARIO instance);
    partial void InsertMAGAZZINO(MAGAZZINO instance);
    partial void UpdateMAGAZZINO(MAGAZZINO instance);
    partial void DeleteMAGAZZINO(MAGAZZINO instance);
    partial void InsertORDINE(ORDINE instance);
    partial void UpdateORDINE(ORDINE instance);
    partial void DeleteORDINE(ORDINE instance);
    partial void InsertPRODOTTO(PRODOTTO instance);
    partial void UpdatePRODOTTO(PRODOTTO instance);
    partial void DeletePRODOTTO(PRODOTTO instance);
    partial void InsertRACCORDO(RACCORDO instance);
    partial void UpdateRACCORDO(RACCORDO instance);
    partial void DeleteRACCORDO(RACCORDO instance);
    partial void InsertRUBINETTO(RUBINETTO instance);
    partial void UpdateRUBINETTO(RUBINETTO instance);
    partial void DeleteRUBINETTO(RUBINETTO instance);
    partial void InsertSUGGERIMENTO(SUGGERIMENTO instance);
    partial void UpdateSUGGERIMENTO(SUGGERIMENTO instance);
    partial void DeleteSUGGERIMENTO(SUGGERIMENTO instance);
    #endregion
		
		public LinqToSQLClassDataContext() : 
				base(global::ProgettoDB15_Bellini_Capponi.Properties.Settings.Default.PorgettoDB15ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSQLClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CASAPRODUTTRICE> CASAPRODUTTRICE
		{
			get
			{
				return this.GetTable<CASAPRODUTTRICE>();
			}
		}
		
		public System.Data.Linq.Table<TUBO> TUBO
		{
			get
			{
				return this.GetTable<TUBO>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTE> CLIENTE
		{
			get
			{
				return this.GetTable<CLIENTE>();
			}
		}
		
		public System.Data.Linq.Table<DETTAGLIODORDINE> DETTAGLIODORDINE
		{
			get
			{
				return this.GetTable<DETTAGLIODORDINE>();
			}
		}
		
		public System.Data.Linq.Table<DETTAGLIOGIACENZA> DETTAGLIOGIACENZA
		{
			get
			{
				return this.GetTable<DETTAGLIOGIACENZA>();
			}
		}
		
		public System.Data.Linq.Table<DIPENDENTE> DIPENDENTE
		{
			get
			{
				return this.GetTable<DIPENDENTE>();
			}
		}
		
		public System.Data.Linq.Table<FORNITORE> FORNITORE
		{
			get
			{
				return this.GetTable<FORNITORE>();
			}
		}
		
		public System.Data.Linq.Table<INVENTARIO> INVENTARIO
		{
			get
			{
				return this.GetTable<INVENTARIO>();
			}
		}
		
		public System.Data.Linq.Table<MAGAZZINO> MAGAZZINO
		{
			get
			{
				return this.GetTable<MAGAZZINO>();
			}
		}
		
		public System.Data.Linq.Table<ORDINE> ORDINE
		{
			get
			{
				return this.GetTable<ORDINE>();
			}
		}
		
		public System.Data.Linq.Table<PRODOTTO> PRODOTTO
		{
			get
			{
				return this.GetTable<PRODOTTO>();
			}
		}
		
		public System.Data.Linq.Table<RACCORDO> RACCORDO
		{
			get
			{
				return this.GetTable<RACCORDO>();
			}
		}
		
		public System.Data.Linq.Table<RUBINETTO> RUBINETTO
		{
			get
			{
				return this.GetTable<RUBINETTO>();
			}
		}
		
		public System.Data.Linq.Table<SUGGERIMENTO> SUGGERIMENTO
		{
			get
			{
				return this.GetTable<SUGGERIMENTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CASAPRODUTTRICE")]
	public partial class CASAPRODUTTRICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _marchio;
		
		private string _descrizione;
		
		private EntitySet<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmarchioChanging(string value);
    partial void OnmarchioChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    #endregion
		
		public CASAPRODUTTRICE()
		{
			this._PRODOTTO = new EntitySet<PRODOTTO>(new Action<PRODOTTO>(this.attach_PRODOTTO), new Action<PRODOTTO>(this.detach_PRODOTTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marchio", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string marchio
		{
			get
			{
				return this._marchio;
			}
			set
			{
				if ((this._marchio != value))
				{
					this.OnmarchioChanging(value);
					this.SendPropertyChanging();
					this._marchio = value;
					this.SendPropertyChanged("marchio");
					this.OnmarchioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASAPRODUTTRICE_PRODOTTO", Storage="_PRODOTTO", ThisKey="marchio", OtherKey="marchio")]
		public EntitySet<PRODOTTO> PRODOTTO
		{
			get
			{
				return this._PRODOTTO;
			}
			set
			{
				this._PRODOTTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODOTTO(PRODOTTO entity)
		{
			this.SendPropertyChanging();
			entity.CASAPRODUTTRICE = this;
		}
		
		private void detach_PRODOTTO(PRODOTTO entity)
		{
			this.SendPropertyChanging();
			entity.CASAPRODUTTRICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUBO")]
	public partial class TUBO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDprodotto;
		
		private int _diametro;
		
		private int _lunghezza;
		
		private EntityRef<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OndiametroChanging(int value);
    partial void OndiametroChanged();
    partial void OnlunghezzaChanging(int value);
    partial void OnlunghezzaChanged();
    #endregion
		
		public TUBO()
		{
			this._PRODOTTO = default(EntityRef<PRODOTTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					if (this._PRODOTTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diametro", DbType="Int NOT NULL")]
		public int diametro
		{
			get
			{
				return this._diametro;
			}
			set
			{
				if ((this._diametro != value))
				{
					this.OndiametroChanging(value);
					this.SendPropertyChanging();
					this._diametro = value;
					this.SendPropertyChanged("diametro");
					this.OndiametroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lunghezza", DbType="Int NOT NULL")]
		public int lunghezza
		{
			get
			{
				return this._lunghezza;
			}
			set
			{
				if ((this._lunghezza != value))
				{
					this.OnlunghezzaChanging(value);
					this.SendPropertyChanging();
					this._lunghezza = value;
					this.SendPropertyChanged("lunghezza");
					this.OnlunghezzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_TUBO", Storage="_PRODOTTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsForeignKey=true)]
		public PRODOTTO PRODOTTO
		{
			get
			{
				return this._PRODOTTO.Entity;
			}
			set
			{
				PRODOTTO previousValue = this._PRODOTTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTO.Entity = null;
						previousValue.TUBO = null;
					}
					this._PRODOTTO.Entity = value;
					if ((value != null))
					{
						value.TUBO = this;
						this._IDprodotto = value.IDprodotto;
					}
					else
					{
						this._IDprodotto = default(int);
					}
					this.SendPropertyChanged("PRODOTTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTE")]
	public partial class CLIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDcliente;
		
		private string _tipo;
		
		private string _descrizione;
		
		private string _denominazionesociale;
		
		private string _nome;
		
		private string _cognome;
		
		private EntitySet<ORDINE> _ORDINE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDclienteChanging(int value);
    partial void OnIDclienteChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    partial void OndenominazionesocialeChanging(string value);
    partial void OndenominazionesocialeChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    #endregion
		
		public CLIENTE()
		{
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDcliente
		{
			get
			{
				return this._IDcliente;
			}
			set
			{
				if ((this._IDcliente != value))
				{
					this.OnIDclienteChanging(value);
					this.SendPropertyChanging();
					this._IDcliente = value;
					this.SendPropertyChanged("IDcliente");
					this.OnIDclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_denominazionesociale", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string denominazionesociale
		{
			get
			{
				return this._denominazionesociale;
			}
			set
			{
				if ((this._denominazionesociale != value))
				{
					this.OndenominazionesocialeChanging(value);
					this.SendPropertyChanging();
					this._denominazionesociale = value;
					this.SendPropertyChanged("denominazionesociale");
					this.OndenominazionesocialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="VarChar(50)")]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_ORDINE", Storage="_ORDINE", ThisKey="IDcliente", OtherKey="IDcliente")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETTAGLIODORDINE")]
	public partial class DETTAGLIODORDINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDordine;
		
		private int _IDprodotto;
		
		private int _quantità;
		
		private EntityRef<ORDINE> _ORDINE;
		
		private EntityRef<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDordineChanging(int value);
    partial void OnIDordineChanged();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OnquantitàChanging(int value);
    partial void OnquantitàChanged();
    #endregion
		
		public DETTAGLIODORDINE()
		{
			this._ORDINE = default(EntityRef<ORDINE>);
			this._PRODOTTO = default(EntityRef<PRODOTTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDordine", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDordine
		{
			get
			{
				return this._IDordine;
			}
			set
			{
				if ((this._IDordine != value))
				{
					if (this._ORDINE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDordineChanging(value);
					this.SendPropertyChanging();
					this._IDordine = value;
					this.SendPropertyChanged("IDordine");
					this.OnIDordineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					if (this._PRODOTTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantità", DbType="Int NOT NULL")]
		public int quantità
		{
			get
			{
				return this._quantità;
			}
			set
			{
				if ((this._quantità != value))
				{
					this.OnquantitàChanging(value);
					this.SendPropertyChanging();
					this._quantità = value;
					this.SendPropertyChanged("quantità");
					this.OnquantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDINE_DETTAGLIODORDINE", Storage="_ORDINE", ThisKey="IDordine", OtherKey="IDordine", IsForeignKey=true)]
		public ORDINE ORDINE
		{
			get
			{
				return this._ORDINE.Entity;
			}
			set
			{
				ORDINE previousValue = this._ORDINE.Entity;
				if (((previousValue != value) 
							|| (this._ORDINE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDINE.Entity = null;
						previousValue.DETTAGLIODORDINE.Remove(this);
					}
					this._ORDINE.Entity = value;
					if ((value != null))
					{
						value.DETTAGLIODORDINE.Add(this);
						this._IDordine = value.IDordine;
					}
					else
					{
						this._IDordine = default(int);
					}
					this.SendPropertyChanged("ORDINE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_DETTAGLIODORDINE", Storage="_PRODOTTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsForeignKey=true)]
		public PRODOTTO PRODOTTO
		{
			get
			{
				return this._PRODOTTO.Entity;
			}
			set
			{
				PRODOTTO previousValue = this._PRODOTTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTO.Entity = null;
						previousValue.DETTAGLIODORDINE.Remove(this);
					}
					this._PRODOTTO.Entity = value;
					if ((value != null))
					{
						value.DETTAGLIODORDINE.Add(this);
						this._IDprodotto = value.IDprodotto;
					}
					else
					{
						this._IDprodotto = default(int);
					}
					this.SendPropertyChanged("PRODOTTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETTAGLIOGIACENZA")]
	public partial class DETTAGLIOGIACENZA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDinventario;
		
		private int _IDprodotto;
		
		private int _quantità;
		
		private EntityRef<INVENTARIO> _INVENTARIO;
		
		private EntityRef<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDinventarioChanging(int value);
    partial void OnIDinventarioChanged();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OnquantitàChanging(int value);
    partial void OnquantitàChanged();
    #endregion
		
		public DETTAGLIOGIACENZA()
		{
			this._INVENTARIO = default(EntityRef<INVENTARIO>);
			this._PRODOTTO = default(EntityRef<PRODOTTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDinventario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDinventario
		{
			get
			{
				return this._IDinventario;
			}
			set
			{
				if ((this._IDinventario != value))
				{
					if (this._INVENTARIO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDinventarioChanging(value);
					this.SendPropertyChanging();
					this._IDinventario = value;
					this.SendPropertyChanged("IDinventario");
					this.OnIDinventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					if (this._PRODOTTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantità", DbType="Int NOT NULL")]
		public int quantità
		{
			get
			{
				return this._quantità;
			}
			set
			{
				if ((this._quantità != value))
				{
					this.OnquantitàChanging(value);
					this.SendPropertyChanging();
					this._quantità = value;
					this.SendPropertyChanged("quantità");
					this.OnquantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVENTARIO_DETTAGLIOGIACENZA", Storage="_INVENTARIO", ThisKey="IDinventario", OtherKey="IDinventario", IsForeignKey=true)]
		public INVENTARIO INVENTARIO
		{
			get
			{
				return this._INVENTARIO.Entity;
			}
			set
			{
				INVENTARIO previousValue = this._INVENTARIO.Entity;
				if (((previousValue != value) 
							|| (this._INVENTARIO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVENTARIO.Entity = null;
						previousValue.DETTAGLIOGIACENZA.Remove(this);
					}
					this._INVENTARIO.Entity = value;
					if ((value != null))
					{
						value.DETTAGLIOGIACENZA.Add(this);
						this._IDinventario = value.IDinventario;
					}
					else
					{
						this._IDinventario = default(int);
					}
					this.SendPropertyChanged("INVENTARIO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_DETTAGLIOGIACENZA", Storage="_PRODOTTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsForeignKey=true)]
		public PRODOTTO PRODOTTO
		{
			get
			{
				return this._PRODOTTO.Entity;
			}
			set
			{
				PRODOTTO previousValue = this._PRODOTTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTO.Entity = null;
						previousValue.DETTAGLIOGIACENZA.Remove(this);
					}
					this._PRODOTTO.Entity = value;
					if ((value != null))
					{
						value.DETTAGLIOGIACENZA.Add(this);
						this._IDprodotto = value.IDprodotto;
					}
					else
					{
						this._IDprodotto = default(int);
					}
					this.SendPropertyChanged("PRODOTTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIPENDENTE")]
	public partial class DIPENDENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CODfiscale;
		
		private string _nome;
		
		private string _cognome;
		
		private string _tipo;
		
		private System.Nullable<int> _numeroordinivendita;
		
		private System.Nullable<int> _numeroclienti;
		
		private System.Nullable<double> _commissione;
		
		private System.Nullable<int> _orelavorate;
		
		private System.Nullable<double> _pagaoraria;
		
		private System.Nullable<System.DateTime> _datainizio;
		
		private System.Nullable<System.DateTime> _datafine;
		
		private System.Nullable<int> _IDmagazzino;
		
		private EntitySet<ORDINE> _ORDINE;
		
		private EntitySet<SUGGERIMENTO> _SUGGERIMENTO;
		
		private EntityRef<MAGAZZINO> _MAGAZZINO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODfiscaleChanging(string value);
    partial void OnCODfiscaleChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OnnumeroordinivenditaChanging(System.Nullable<int> value);
    partial void OnnumeroordinivenditaChanged();
    partial void OnnumeroclientiChanging(System.Nullable<int> value);
    partial void OnnumeroclientiChanged();
    partial void OncommissioneChanging(System.Nullable<double> value);
    partial void OncommissioneChanged();
    partial void OnorelavorateChanging(System.Nullable<int> value);
    partial void OnorelavorateChanged();
    partial void OnpagaorariaChanging(System.Nullable<double> value);
    partial void OnpagaorariaChanged();
    partial void OndatainizioChanging(System.Nullable<System.DateTime> value);
    partial void OndatainizioChanged();
    partial void OndatafineChanging(System.Nullable<System.DateTime> value);
    partial void OndatafineChanged();
    partial void OnIDmagazzinoChanging(System.Nullable<int> value);
    partial void OnIDmagazzinoChanged();
    #endregion
		
		public DIPENDENTE()
		{
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			this._SUGGERIMENTO = new EntitySet<SUGGERIMENTO>(new Action<SUGGERIMENTO>(this.attach_SUGGERIMENTO), new Action<SUGGERIMENTO>(this.detach_SUGGERIMENTO));
			this._MAGAZZINO = default(EntityRef<MAGAZZINO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODfiscale", DbType="NChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CODfiscale
		{
			get
			{
				return this._CODfiscale;
			}
			set
			{
				if ((this._CODfiscale != value))
				{
					this.OnCODfiscaleChanging(value);
					this.SendPropertyChanging();
					this._CODfiscale = value;
					this.SendPropertyChanged("CODfiscale");
					this.OnCODfiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroordinivendita", DbType="Int")]
		public System.Nullable<int> numeroordinivendita
		{
			get
			{
				return this._numeroordinivendita;
			}
			set
			{
				if ((this._numeroordinivendita != value))
				{
					this.OnnumeroordinivenditaChanging(value);
					this.SendPropertyChanging();
					this._numeroordinivendita = value;
					this.SendPropertyChanged("numeroordinivendita");
					this.OnnumeroordinivenditaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroclienti", DbType="Int")]
		public System.Nullable<int> numeroclienti
		{
			get
			{
				return this._numeroclienti;
			}
			set
			{
				if ((this._numeroclienti != value))
				{
					this.OnnumeroclientiChanging(value);
					this.SendPropertyChanging();
					this._numeroclienti = value;
					this.SendPropertyChanged("numeroclienti");
					this.OnnumeroclientiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commissione", DbType="Float")]
		public System.Nullable<double> commissione
		{
			get
			{
				return this._commissione;
			}
			set
			{
				if ((this._commissione != value))
				{
					this.OncommissioneChanging(value);
					this.SendPropertyChanging();
					this._commissione = value;
					this.SendPropertyChanged("commissione");
					this.OncommissioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orelavorate", DbType="Int")]
		public System.Nullable<int> orelavorate
		{
			get
			{
				return this._orelavorate;
			}
			set
			{
				if ((this._orelavorate != value))
				{
					this.OnorelavorateChanging(value);
					this.SendPropertyChanging();
					this._orelavorate = value;
					this.SendPropertyChanged("orelavorate");
					this.OnorelavorateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pagaoraria", DbType="Float")]
		public System.Nullable<double> pagaoraria
		{
			get
			{
				return this._pagaoraria;
			}
			set
			{
				if ((this._pagaoraria != value))
				{
					this.OnpagaorariaChanging(value);
					this.SendPropertyChanging();
					this._pagaoraria = value;
					this.SendPropertyChanged("pagaoraria");
					this.OnpagaorariaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datainizio", DbType="Date")]
		public System.Nullable<System.DateTime> datainizio
		{
			get
			{
				return this._datainizio;
			}
			set
			{
				if ((this._datainizio != value))
				{
					this.OndatainizioChanging(value);
					this.SendPropertyChanging();
					this._datainizio = value;
					this.SendPropertyChanged("datainizio");
					this.OndatainizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datafine", DbType="Date")]
		public System.Nullable<System.DateTime> datafine
		{
			get
			{
				return this._datafine;
			}
			set
			{
				if ((this._datafine != value))
				{
					this.OndatafineChanging(value);
					this.SendPropertyChanging();
					this._datafine = value;
					this.SendPropertyChanged("datafine");
					this.OndatafineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmagazzino", DbType="Int")]
		public System.Nullable<int> IDmagazzino
		{
			get
			{
				return this._IDmagazzino;
			}
			set
			{
				if ((this._IDmagazzino != value))
				{
					if (this._MAGAZZINO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDmagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDmagazzino = value;
					this.SendPropertyChanged("IDmagazzino");
					this.OnIDmagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTE_ORDINE", Storage="_ORDINE", ThisKey="CODfiscale", OtherKey="CODfiscale")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTE_SUGGERIMENTO", Storage="_SUGGERIMENTO", ThisKey="CODfiscale", OtherKey="CODfiscale")]
		public EntitySet<SUGGERIMENTO> SUGGERIMENTO
		{
			get
			{
				return this._SUGGERIMENTO;
			}
			set
			{
				this._SUGGERIMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINO_DIPENDENTE", Storage="_MAGAZZINO", ThisKey="IDmagazzino", OtherKey="IDmagazzino", IsForeignKey=true)]
		public MAGAZZINO MAGAZZINO
		{
			get
			{
				return this._MAGAZZINO.Entity;
			}
			set
			{
				MAGAZZINO previousValue = this._MAGAZZINO.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINO.Entity = null;
						previousValue.DIPENDENTE.Remove(this);
					}
					this._MAGAZZINO.Entity = value;
					if ((value != null))
					{
						value.DIPENDENTE.Add(this);
						this._IDmagazzino = value.IDmagazzino;
					}
					else
					{
						this._IDmagazzino = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAGAZZINO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTE = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTE = null;
		}
		
		private void attach_SUGGERIMENTO(SUGGERIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTE = this;
		}
		
		private void detach_SUGGERIMENTO(SUGGERIMENTO entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FORNITORE")]
	public partial class FORNITORE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDfornitore;
		
		private string _nome;
		
		private string _cognome;
		
		private string _descrizione;
		
		private EntitySet<ORDINE> _ORDINE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDfornitoreChanging(int value);
    partial void OnIDfornitoreChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    #endregion
		
		public FORNITORE()
		{
			this._ORDINE = new EntitySet<ORDINE>(new Action<ORDINE>(this.attach_ORDINE), new Action<ORDINE>(this.detach_ORDINE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfornitore", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDfornitore
		{
			get
			{
				return this._IDfornitore;
			}
			set
			{
				if ((this._IDfornitore != value))
				{
					this.OnIDfornitoreChanging(value);
					this.SendPropertyChanging();
					this._IDfornitore = value;
					this.SendPropertyChanged("IDfornitore");
					this.OnIDfornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_ORDINE", Storage="_ORDINE", ThisKey="IDfornitore", OtherKey="IDfornitore")]
		public EntitySet<ORDINE> ORDINE
		{
			get
			{
				return this._ORDINE;
			}
			set
			{
				this._ORDINE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = this;
		}
		
		private void detach_ORDINE(ORDINE entity)
		{
			this.SendPropertyChanging();
			entity.FORNITORE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVENTARIO")]
	public partial class INVENTARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDinventario;
		
		private int _IDmagazzino;
		
		private int _anno;
		
		private EntitySet<DETTAGLIOGIACENZA> _DETTAGLIOGIACENZA;
		
		private EntityRef<MAGAZZINO> _MAGAZZINO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDinventarioChanging(int value);
    partial void OnIDinventarioChanged();
    partial void OnIDmagazzinoChanging(int value);
    partial void OnIDmagazzinoChanged();
    partial void OnannoChanging(int value);
    partial void OnannoChanged();
    #endregion
		
		public INVENTARIO()
		{
			this._DETTAGLIOGIACENZA = new EntitySet<DETTAGLIOGIACENZA>(new Action<DETTAGLIOGIACENZA>(this.attach_DETTAGLIOGIACENZA), new Action<DETTAGLIOGIACENZA>(this.detach_DETTAGLIOGIACENZA));
			this._MAGAZZINO = default(EntityRef<MAGAZZINO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDinventario", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDinventario
		{
			get
			{
				return this._IDinventario;
			}
			set
			{
				if ((this._IDinventario != value))
				{
					this.OnIDinventarioChanging(value);
					this.SendPropertyChanging();
					this._IDinventario = value;
					this.SendPropertyChanged("IDinventario");
					this.OnIDinventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDmagazzino
		{
			get
			{
				return this._IDmagazzino;
			}
			set
			{
				if ((this._IDmagazzino != value))
				{
					if (this._MAGAZZINO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDmagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDmagazzino = value;
					this.SendPropertyChanged("IDmagazzino");
					this.OnIDmagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int anno
		{
			get
			{
				return this._anno;
			}
			set
			{
				if ((this._anno != value))
				{
					this.OnannoChanging(value);
					this.SendPropertyChanging();
					this._anno = value;
					this.SendPropertyChanged("anno");
					this.OnannoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVENTARIO_DETTAGLIOGIACENZA", Storage="_DETTAGLIOGIACENZA", ThisKey="IDinventario", OtherKey="IDinventario")]
		public EntitySet<DETTAGLIOGIACENZA> DETTAGLIOGIACENZA
		{
			get
			{
				return this._DETTAGLIOGIACENZA;
			}
			set
			{
				this._DETTAGLIOGIACENZA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINO_INVENTARIO", Storage="_MAGAZZINO", ThisKey="IDmagazzino", OtherKey="IDmagazzino", IsForeignKey=true)]
		public MAGAZZINO MAGAZZINO
		{
			get
			{
				return this._MAGAZZINO.Entity;
			}
			set
			{
				MAGAZZINO previousValue = this._MAGAZZINO.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINO.Entity = null;
						previousValue.INVENTARIO.Remove(this);
					}
					this._MAGAZZINO.Entity = value;
					if ((value != null))
					{
						value.INVENTARIO.Add(this);
						this._IDmagazzino = value.IDmagazzino;
					}
					else
					{
						this._IDmagazzino = default(int);
					}
					this.SendPropertyChanged("MAGAZZINO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETTAGLIOGIACENZA(DETTAGLIOGIACENZA entity)
		{
			this.SendPropertyChanging();
			entity.INVENTARIO = this;
		}
		
		private void detach_DETTAGLIOGIACENZA(DETTAGLIOGIACENZA entity)
		{
			this.SendPropertyChanging();
			entity.INVENTARIO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAGAZZINO")]
	public partial class MAGAZZINO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDmagazzino;
		
		private string _nome;
		
		private string _indirizzo;
		
		private EntitySet<DIPENDENTE> _DIPENDENTE;
		
		private EntitySet<INVENTARIO> _INVENTARIO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDmagazzinoChanging(int value);
    partial void OnIDmagazzinoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnindirizzoChanging(string value);
    partial void OnindirizzoChanged();
    #endregion
		
		public MAGAZZINO()
		{
			this._DIPENDENTE = new EntitySet<DIPENDENTE>(new Action<DIPENDENTE>(this.attach_DIPENDENTE), new Action<DIPENDENTE>(this.detach_DIPENDENTE));
			this._INVENTARIO = new EntitySet<INVENTARIO>(new Action<INVENTARIO>(this.attach_INVENTARIO), new Action<INVENTARIO>(this.detach_INVENTARIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDmagazzino", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDmagazzino
		{
			get
			{
				return this._IDmagazzino;
			}
			set
			{
				if ((this._IDmagazzino != value))
				{
					this.OnIDmagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDmagazzino = value;
					this.SendPropertyChanged("IDmagazzino");
					this.OnIDmagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indirizzo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string indirizzo
		{
			get
			{
				return this._indirizzo;
			}
			set
			{
				if ((this._indirizzo != value))
				{
					this.OnindirizzoChanging(value);
					this.SendPropertyChanging();
					this._indirizzo = value;
					this.SendPropertyChanged("indirizzo");
					this.OnindirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINO_DIPENDENTE", Storage="_DIPENDENTE", ThisKey="IDmagazzino", OtherKey="IDmagazzino")]
		public EntitySet<DIPENDENTE> DIPENDENTE
		{
			get
			{
				return this._DIPENDENTE;
			}
			set
			{
				this._DIPENDENTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINO_INVENTARIO", Storage="_INVENTARIO", ThisKey="IDmagazzino", OtherKey="IDmagazzino")]
		public EntitySet<INVENTARIO> INVENTARIO
		{
			get
			{
				return this._INVENTARIO;
			}
			set
			{
				this._INVENTARIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIPENDENTE(DIPENDENTE entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINO = this;
		}
		
		private void detach_DIPENDENTE(DIPENDENTE entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINO = null;
		}
		
		private void attach_INVENTARIO(INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINO = this;
		}
		
		private void detach_INVENTARIO(INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDINE")]
	public partial class ORDINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDordine;
		
		private System.DateTime _data;
		
		private string _CODfiscale;
		
		private string _tipo;
		
		private decimal _prezzo;
		
		private System.Nullable<int> _IDcliente;
		
		private System.Nullable<int> _IDfornitore;
		
		private EntitySet<DETTAGLIODORDINE> _DETTAGLIODORDINE;
		
		private EntityRef<CLIENTE> _CLIENTE;
		
		private EntityRef<DIPENDENTE> _DIPENDENTE;
		
		private EntityRef<FORNITORE> _FORNITORE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDordineChanging(int value);
    partial void OnIDordineChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnCODfiscaleChanging(string value);
    partial void OnCODfiscaleChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OnprezzoChanging(decimal value);
    partial void OnprezzoChanged();
    partial void OnIDclienteChanging(System.Nullable<int> value);
    partial void OnIDclienteChanged();
    partial void OnIDfornitoreChanging(System.Nullable<int> value);
    partial void OnIDfornitoreChanged();
    #endregion
		
		public ORDINE()
		{
			this._DETTAGLIODORDINE = new EntitySet<DETTAGLIODORDINE>(new Action<DETTAGLIODORDINE>(this.attach_DETTAGLIODORDINE), new Action<DETTAGLIODORDINE>(this.detach_DETTAGLIODORDINE));
			this._CLIENTE = default(EntityRef<CLIENTE>);
			this._DIPENDENTE = default(EntityRef<DIPENDENTE>);
			this._FORNITORE = default(EntityRef<FORNITORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDordine", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDordine
		{
			get
			{
				return this._IDordine;
			}
			set
			{
				if ((this._IDordine != value))
				{
					this.OnIDordineChanging(value);
					this.SendPropertyChanging();
					this._IDordine = value;
					this.SendPropertyChanged("IDordine");
					this.OnIDordineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="DateTime NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODfiscale", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string CODfiscale
		{
			get
			{
				return this._CODfiscale;
			}
			set
			{
				if ((this._CODfiscale != value))
				{
					if (this._DIPENDENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODfiscaleChanging(value);
					this.SendPropertyChanging();
					this._CODfiscale = value;
					this.SendPropertyChanged("CODfiscale");
					this.OnCODfiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Money NOT NULL")]
		public decimal prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcliente", DbType="Int")]
		public System.Nullable<int> IDcliente
		{
			get
			{
				return this._IDcliente;
			}
			set
			{
				if ((this._IDcliente != value))
				{
					if (this._CLIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDclienteChanging(value);
					this.SendPropertyChanging();
					this._IDcliente = value;
					this.SendPropertyChanged("IDcliente");
					this.OnIDclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDfornitore", DbType="Int")]
		public System.Nullable<int> IDfornitore
		{
			get
			{
				return this._IDfornitore;
			}
			set
			{
				if ((this._IDfornitore != value))
				{
					if (this._FORNITORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDfornitoreChanging(value);
					this.SendPropertyChanging();
					this._IDfornitore = value;
					this.SendPropertyChanged("IDfornitore");
					this.OnIDfornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDINE_DETTAGLIODORDINE", Storage="_DETTAGLIODORDINE", ThisKey="IDordine", OtherKey="IDordine")]
		public EntitySet<DETTAGLIODORDINE> DETTAGLIODORDINE
		{
			get
			{
				return this._DETTAGLIODORDINE;
			}
			set
			{
				this._DETTAGLIODORDINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_ORDINE", Storage="_CLIENTE", ThisKey="IDcliente", OtherKey="IDcliente", IsForeignKey=true)]
		public CLIENTE CLIENTE
		{
			get
			{
				return this._CLIENTE.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._CLIENTE.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._IDcliente = value.IDcliente;
					}
					else
					{
						this._IDcliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("CLIENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTE_ORDINE", Storage="_DIPENDENTE", ThisKey="CODfiscale", OtherKey="CODfiscale", IsForeignKey=true)]
		public DIPENDENTE DIPENDENTE
		{
			get
			{
				return this._DIPENDENTE.Entity;
			}
			set
			{
				DIPENDENTE previousValue = this._DIPENDENTE.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTE.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._DIPENDENTE.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._CODfiscale = value.CODfiscale;
					}
					else
					{
						this._CODfiscale = default(string);
					}
					this.SendPropertyChanged("DIPENDENTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FORNITORE_ORDINE", Storage="_FORNITORE", ThisKey="IDfornitore", OtherKey="IDfornitore", IsForeignKey=true)]
		public FORNITORE FORNITORE
		{
			get
			{
				return this._FORNITORE.Entity;
			}
			set
			{
				FORNITORE previousValue = this._FORNITORE.Entity;
				if (((previousValue != value) 
							|| (this._FORNITORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FORNITORE.Entity = null;
						previousValue.ORDINE.Remove(this);
					}
					this._FORNITORE.Entity = value;
					if ((value != null))
					{
						value.ORDINE.Add(this);
						this._IDfornitore = value.IDfornitore;
					}
					else
					{
						this._IDfornitore = default(Nullable<int>);
					}
					this.SendPropertyChanged("FORNITORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETTAGLIODORDINE(DETTAGLIODORDINE entity)
		{
			this.SendPropertyChanging();
			entity.ORDINE = this;
		}
		
		private void detach_DETTAGLIODORDINE(DETTAGLIODORDINE entity)
		{
			this.SendPropertyChanging();
			entity.ORDINE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODOTTO")]
	public partial class PRODOTTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDprodotto;
		
		private string _nome;
		
		private string _marchio;
		
		private string _tipoprodotto;
		
		private decimal _prezzo;
		
		private EntityRef<TUBO> _TUBO;
		
		private EntitySet<DETTAGLIODORDINE> _DETTAGLIODORDINE;
		
		private EntitySet<DETTAGLIOGIACENZA> _DETTAGLIOGIACENZA;
		
		private EntityRef<RACCORDO> _RACCORDO;
		
		private EntityRef<RUBINETTO> _RUBINETTO;
		
		private EntityRef<CASAPRODUTTRICE> _CASAPRODUTTRICE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnmarchioChanging(string value);
    partial void OnmarchioChanged();
    partial void OntipoprodottoChanging(string value);
    partial void OntipoprodottoChanged();
    partial void OnprezzoChanging(decimal value);
    partial void OnprezzoChanged();
    #endregion
		
		public PRODOTTO()
		{
			this._TUBO = default(EntityRef<TUBO>);
			this._DETTAGLIODORDINE = new EntitySet<DETTAGLIODORDINE>(new Action<DETTAGLIODORDINE>(this.attach_DETTAGLIODORDINE), new Action<DETTAGLIODORDINE>(this.detach_DETTAGLIODORDINE));
			this._DETTAGLIOGIACENZA = new EntitySet<DETTAGLIOGIACENZA>(new Action<DETTAGLIOGIACENZA>(this.attach_DETTAGLIOGIACENZA), new Action<DETTAGLIOGIACENZA>(this.detach_DETTAGLIOGIACENZA));
			this._RACCORDO = default(EntityRef<RACCORDO>);
			this._RUBINETTO = default(EntityRef<RUBINETTO>);
			this._CASAPRODUTTRICE = default(EntityRef<CASAPRODUTTRICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marchio", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string marchio
		{
			get
			{
				return this._marchio;
			}
			set
			{
				if ((this._marchio != value))
				{
					if (this._CASAPRODUTTRICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmarchioChanging(value);
					this.SendPropertyChanging();
					this._marchio = value;
					this.SendPropertyChanged("marchio");
					this.OnmarchioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipoprodotto", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string tipoprodotto
		{
			get
			{
				return this._tipoprodotto;
			}
			set
			{
				if ((this._tipoprodotto != value))
				{
					this.OntipoprodottoChanging(value);
					this.SendPropertyChanging();
					this._tipoprodotto = value;
					this.SendPropertyChanged("tipoprodotto");
					this.OntipoprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezzo", DbType="Money NOT NULL")]
		public decimal prezzo
		{
			get
			{
				return this._prezzo;
			}
			set
			{
				if ((this._prezzo != value))
				{
					this.OnprezzoChanging(value);
					this.SendPropertyChanging();
					this._prezzo = value;
					this.SendPropertyChanged("prezzo");
					this.OnprezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_TUBO", Storage="_TUBO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsUnique=true, IsForeignKey=false)]
		public TUBO TUBO
		{
			get
			{
				return this._TUBO.Entity;
			}
			set
			{
				TUBO previousValue = this._TUBO.Entity;
				if (((previousValue != value) 
							|| (this._TUBO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TUBO.Entity = null;
						previousValue.PRODOTTO = null;
					}
					this._TUBO.Entity = value;
					if ((value != null))
					{
						value.PRODOTTO = this;
					}
					this.SendPropertyChanged("TUBO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_DETTAGLIODORDINE", Storage="_DETTAGLIODORDINE", ThisKey="IDprodotto", OtherKey="IDprodotto")]
		public EntitySet<DETTAGLIODORDINE> DETTAGLIODORDINE
		{
			get
			{
				return this._DETTAGLIODORDINE;
			}
			set
			{
				this._DETTAGLIODORDINE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_DETTAGLIOGIACENZA", Storage="_DETTAGLIOGIACENZA", ThisKey="IDprodotto", OtherKey="IDprodotto")]
		public EntitySet<DETTAGLIOGIACENZA> DETTAGLIOGIACENZA
		{
			get
			{
				return this._DETTAGLIOGIACENZA;
			}
			set
			{
				this._DETTAGLIOGIACENZA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_RACCORDO", Storage="_RACCORDO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsUnique=true, IsForeignKey=false)]
		public RACCORDO RACCORDO
		{
			get
			{
				return this._RACCORDO.Entity;
			}
			set
			{
				RACCORDO previousValue = this._RACCORDO.Entity;
				if (((previousValue != value) 
							|| (this._RACCORDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RACCORDO.Entity = null;
						previousValue.PRODOTTO = null;
					}
					this._RACCORDO.Entity = value;
					if ((value != null))
					{
						value.PRODOTTO = this;
					}
					this.SendPropertyChanged("RACCORDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_RUBINETTO", Storage="_RUBINETTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsUnique=true, IsForeignKey=false)]
		public RUBINETTO RUBINETTO
		{
			get
			{
				return this._RUBINETTO.Entity;
			}
			set
			{
				RUBINETTO previousValue = this._RUBINETTO.Entity;
				if (((previousValue != value) 
							|| (this._RUBINETTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RUBINETTO.Entity = null;
						previousValue.PRODOTTO = null;
					}
					this._RUBINETTO.Entity = value;
					if ((value != null))
					{
						value.PRODOTTO = this;
					}
					this.SendPropertyChanged("RUBINETTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CASAPRODUTTRICE_PRODOTTO", Storage="_CASAPRODUTTRICE", ThisKey="marchio", OtherKey="marchio", IsForeignKey=true)]
		public CASAPRODUTTRICE CASAPRODUTTRICE
		{
			get
			{
				return this._CASAPRODUTTRICE.Entity;
			}
			set
			{
				CASAPRODUTTRICE previousValue = this._CASAPRODUTTRICE.Entity;
				if (((previousValue != value) 
							|| (this._CASAPRODUTTRICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CASAPRODUTTRICE.Entity = null;
						previousValue.PRODOTTO.Remove(this);
					}
					this._CASAPRODUTTRICE.Entity = value;
					if ((value != null))
					{
						value.PRODOTTO.Add(this);
						this._marchio = value.marchio;
					}
					else
					{
						this._marchio = default(string);
					}
					this.SendPropertyChanged("CASAPRODUTTRICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETTAGLIODORDINE(DETTAGLIODORDINE entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTO = this;
		}
		
		private void detach_DETTAGLIODORDINE(DETTAGLIODORDINE entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTO = null;
		}
		
		private void attach_DETTAGLIOGIACENZA(DETTAGLIOGIACENZA entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTO = this;
		}
		
		private void detach_DETTAGLIOGIACENZA(DETTAGLIOGIACENZA entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RACCORDO")]
	public partial class RACCORDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDprodotto;
		
		private string _tipo;
		
		private int _diametro;
		
		private EntityRef<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OndiametroChanging(int value);
    partial void OndiametroChanged();
    #endregion
		
		public RACCORDO()
		{
			this._PRODOTTO = default(EntityRef<PRODOTTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					if (this._PRODOTTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diametro", DbType="Int NOT NULL")]
		public int diametro
		{
			get
			{
				return this._diametro;
			}
			set
			{
				if ((this._diametro != value))
				{
					this.OndiametroChanging(value);
					this.SendPropertyChanging();
					this._diametro = value;
					this.SendPropertyChanged("diametro");
					this.OndiametroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_RACCORDO", Storage="_PRODOTTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsForeignKey=true)]
		public PRODOTTO PRODOTTO
		{
			get
			{
				return this._PRODOTTO.Entity;
			}
			set
			{
				PRODOTTO previousValue = this._PRODOTTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTO.Entity = null;
						previousValue.RACCORDO = null;
					}
					this._PRODOTTO.Entity = value;
					if ((value != null))
					{
						value.RACCORDO = this;
						this._IDprodotto = value.IDprodotto;
					}
					else
					{
						this._IDprodotto = default(int);
					}
					this.SendPropertyChanged("PRODOTTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RUBINETTO")]
	public partial class RUBINETTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDprodotto;
		
		private string _tipo;
		
		private string _descrizione;
		
		private EntityRef<PRODOTTO> _PRODOTTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDprodottoChanging(int value);
    partial void OnIDprodottoChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OndescrizioneChanging(string value);
    partial void OndescrizioneChanged();
    #endregion
		
		public RUBINETTO()
		{
			this._PRODOTTO = default(EntityRef<PRODOTTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprodotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDprodotto
		{
			get
			{
				return this._IDprodotto;
			}
			set
			{
				if ((this._IDprodotto != value))
				{
					if (this._PRODOTTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDprodottoChanging(value);
					this.SendPropertyChanging();
					this._IDprodotto = value;
					this.SendPropertyChanged("IDprodotto");
					this.OnIDprodottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descrizione", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descrizione
		{
			get
			{
				return this._descrizione;
			}
			set
			{
				if ((this._descrizione != value))
				{
					this.OndescrizioneChanging(value);
					this.SendPropertyChanging();
					this._descrizione = value;
					this.SendPropertyChanged("descrizione");
					this.OndescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTO_RUBINETTO", Storage="_PRODOTTO", ThisKey="IDprodotto", OtherKey="IDprodotto", IsForeignKey=true)]
		public PRODOTTO PRODOTTO
		{
			get
			{
				return this._PRODOTTO.Entity;
			}
			set
			{
				PRODOTTO previousValue = this._PRODOTTO.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTO.Entity = null;
						previousValue.RUBINETTO = null;
					}
					this._PRODOTTO.Entity = value;
					if ((value != null))
					{
						value.RUBINETTO = this;
						this._IDprodotto = value.IDprodotto;
					}
					else
					{
						this._IDprodotto = default(int);
					}
					this.SendPropertyChanged("PRODOTTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUGGERIMENTO")]
	public partial class SUGGERIMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDcliente;
		
		private string _CODfiscale;
		
		private System.DateTime _data;
		
		private EntityRef<DIPENDENTE> _DIPENDENTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDclienteChanging(int value);
    partial void OnIDclienteChanged();
    partial void OnCODfiscaleChanging(string value);
    partial void OnCODfiscaleChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    #endregion
		
		public SUGGERIMENTO()
		{
			this._DIPENDENTE = default(EntityRef<DIPENDENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDcliente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDcliente
		{
			get
			{
				return this._IDcliente;
			}
			set
			{
				if ((this._IDcliente != value))
				{
					this.OnIDclienteChanging(value);
					this.SendPropertyChanging();
					this._IDcliente = value;
					this.SendPropertyChanged("IDcliente");
					this.OnIDclienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODfiscale", DbType="NChar(16) NOT NULL", CanBeNull=false)]
		public string CODfiscale
		{
			get
			{
				return this._CODfiscale;
			}
			set
			{
				if ((this._CODfiscale != value))
				{
					if (this._DIPENDENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCODfiscaleChanging(value);
					this.SendPropertyChanging();
					this._CODfiscale = value;
					this.SendPropertyChanged("CODfiscale");
					this.OnCODfiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTE_SUGGERIMENTO", Storage="_DIPENDENTE", ThisKey="CODfiscale", OtherKey="CODfiscale", IsForeignKey=true)]
		public DIPENDENTE DIPENDENTE
		{
			get
			{
				return this._DIPENDENTE.Entity;
			}
			set
			{
				DIPENDENTE previousValue = this._DIPENDENTE.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTE.Entity = null;
						previousValue.SUGGERIMENTO.Remove(this);
					}
					this._DIPENDENTE.Entity = value;
					if ((value != null))
					{
						value.SUGGERIMENTO.Add(this);
						this._CODfiscale = value.CODfiscale;
					}
					else
					{
						this._CODfiscale = default(string);
					}
					this.SendPropertyChanged("DIPENDENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
